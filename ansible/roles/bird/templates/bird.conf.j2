log "/var/log/bird.log" all;
debug protocols all;

router id {{ ansible_eth0['ipv4']['address'] }};

protocol kernel {
  scan time 10;
  export all;
}

table aws_routes;
protocol kernel {
  table aws_routes;
  device routes;
  persist;
  export all;
}

protocol device {
  scan time 10;
}

protocol direct {
  interface "eth0";
}

{% for vpn_gw, tunnels in vpn_config.items() %}
{% if loop.first %}
template bgp aws {
  local as {{ tunnels['tunnel-0']['right_asn'] }};
  hold time 30;
  table aws_routes;
  igp table master;
  import all;
  export filter {
    bgp_path = + empty +;
    bgp_path.prepend({{ tunnels['tunnel-0']['right_asn'] }});
    accept;
  };
}
{% endif %}
{% endfor %}

{% for vpn_gw, tunnels in vpn_config.items() %}
{% for tunnel, tunnel_props in tunnels.items() %}
protocol bgp {{ vpn_gw | replace('-', '') | upper }}{{ tunnel | replace('-', '') | upper }} from aws {
  neighbor {{ tunnel_props['left_inside_ip'] | dirname }} as {{ tunnel_props['left_asn'] }};
}

{% endfor %}
{% endfor %}

{% for instance, properties in bgp_neighbours.items() %}
protocol bgp {{ instance | replace('-', '') | upper }} {
{% for vpn_gw, tunnels in vpn_config.items() %}
{% if loop.first %}
  local as {{ tunnels['tunnel-0']['right_asn'] }};
{% endif %}
{% endfor %}
  neighbor {{ properties['private_ip'] }} as {{ properties['asn'] }};
  import all;
  export all;
  hold time 30;
  multihop;
}
{% endfor %}
